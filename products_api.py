# -*- coding: utf-8 -*-
"""Products api.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17qQg9oYzHmN34-AJ_2NaHh2_LJQelg-l
"""

import random
import json
from faker import Faker

faker = Faker()


PRODUCT_TYPE_RULES = {
    "Dress": {"category": "tops", "materials": ["cotton", "linen", "polyester", "silk"]},
    "Jeans": {"category": "bottoms", "materials": ["denim", "cotton", "wool"]},
    "Shirt": {"category": "tops", "materials": ["cotton", "linen", "polyester"]},
    "Sneakers": {"category": "shoes", "materials": ["leather", "canvas", "synthetic"]},
    "Jacket": {"category": "tops", "materials": ["leather", "wool", "polyester"]},
    "Trousers": {"category": "bottoms", "materials": ["cotton", "wool", "linen"]},
    "Top": {"category": "tops", "materials": ["cotton", "polyester", "silk"]},
    "Boots": {"category": "shoes", "materials": ["leather", "rubber", "synthetic"]},
    "Hat": {"category": "accessories", "materials": ["wool", "cotton", "polyester"]},
    "Scarf": {"category": "accessories", "materials": ["wool", "silk", "cotton"]},
    "Watch": {"category": "accessories", "materials": ["metal", "plastic", "leather"]},
}

STYLE_TO_MATERIALS = {
    "casual": ["cotton", "denim", "canvas", "polyester", "synthetic"],
    "formal": ["silk", "wool", "leather", "metal"],
    "sporty": ["polyester", "synthetic", "rubber", "canvas"],
    "trendy": ["leather", "silk", "metal", "linen"],
    "vintage": ["cotton", "wool", "linen", "silk"]
}

STYLE_TAGS = list(STYLE_TO_MATERIALS.keys())
SEASONS = ["spring", "summer", "autumn", "winter", "all"]
SUSTAINABILITY_TAGS = ["organic cotton", "recycled polyester", "vegan leather", "none"]

REVIEW_COMMENTS_LOW = [
    "Fabric is scratchy and uncomfortable.",
    "Poor quality stitching, came undone quickly.",
    "Faded after just one wash.",
    "Sizing is way off—runs too small.",
    "Not as described, very misleading!",
    "Feels cheap, definitely not worth the price.",
    "Buttons popped off within a few wears.",
    "Material feels flimsy and weak.",
    "Color looked different online.",
    "Too stiff and awkward to wear.",
    "Started pilling after a couple of uses.",
    "Didn't match the advertised texture.",
    "Way overpriced for what you get.",
    "Seams already unraveling.",
    "Shrunk even after following washing instructions.",
    "The fit is completely wrong.",
    "Not breathable—makes me sweaty.",
    "Too thin and see-through.",
    "Broke within days, terrible durability.",
    "Smelled weird out of the package.",
    "Doesn’t hold its shape after wearing.",
    "Returned immediately—such a disappointment.",
    "Painful to wear, not comfortable at all.",
    "Arrived with stains and damage.",
    "Expected much better at this price point.",
    "Poorly made, doesn’t look premium.",
    "Fabric tore after just a few wears.",
    "Not suitable for the season it's advertised for.",
    "Weirdly cut, doesn’t sit right on the body.",
    "Started fraying almost immediately.",
    "Zipper broke after one use.",
    "Way thinner than expected, feels flimsy.",
    "Came with loose threads everywhere.",
    "Rough material, not skin-friendly.",
    "Looks cheap despite the price tag.",
    "Sleeves are too tight, uncomfortable.",
    "Would never buy from this brand again.",
    "Gets wrinkled too fast, hard to maintain.",
    "Didn’t last even a month.",
    "Awkward fit around the shoulders.",
    "Really disappointed with this purchase.",
    "Scratchy fabric—irritates my skin.",
    "Shipping took way too long.",
    "The material looks like it would fall apart.",
    "Doesn’t look anything like the pictures.",
    "No stretch, very restrictive.",
    "I wish I had read the reviews before buying!",
    "Not worth the hassle of returning.",
    "Arrived late and wasn’t worth the wait."
]


REVIEW_COMMENTS_HIGH = [
    "Absolutely love this purchase!",
    "Soft, cozy, and great quality.",
    "Perfect fit—feels tailored!",
    "Matches the description perfectly.",
    "Great craftsmanship—worth every cent.",
    "Super stylish and flattering.",
    "Fabric feels premium and durable.",
    "Color is vibrant and beautiful.",
    "Wearing it feels amazing!",
    "Would definitely buy again.",
    "Fits exactly as expected—true to size!",
    "My new favorite item!",
    "Highly impressed by the material.",
    "Holds up great in the wash.",
    "Keeps its shape even after multiple wears.",
    "Received a ton of compliments on this.",
    "Perfect for any occasion!",
    "Great attention to detail.",
    "Lightweight but super warm!",
    "Breathable and easy to style.",
    "Excellent price for such high quality.",
    "Definitely exceeded my expectations!",
    "The texture is just amazing!",
    "So comfortable I could wear it daily!",
    "Ideal for layering, very versatile.",
    "Such a fantastic purchase!",
    "Really well-made, feels luxurious.",
    "Beautifully crafted, worth every penny.",
    "Very impressed with this brand!",
    "Elegant and classy yet casual enough.",
    "The fit is absolutely perfect!",
    "Great buy, highly recommend!",
    "Love how soft and comfortable it is!",
    "Fantastic quality for the price.",
    "Super breathable fabric, perfect for summer.",
    "Already planning to buy another one!",
    "Perfect gift item—my friend loved it!",
    "Lightweight yet warm, great balance.",
    "Exactly what I was looking for!",
    "Extremely stylish and trendy!",
    "Softest fabric I’ve ever owned.",
    "Perfect for travel—packs easily!",
    "I wear this all the time now.",
    "Unbelievable quality for such a great price!",
    "Fabric feels luxurious to the touch.",
    "Really happy with my purchase.",
    "Holds up really well over time.",
    "Quick delivery and excellent packaging.",
    "Great product, would buy again!",
    "My go-to item now, love it!"
]

def generate_brand(brand_id):
    return {
        "brandId": brand_id,
        "name": faker.company(),
        "origin": faker.country()
    }

def generate_stockist(store_id):
    return {
        "storeId": store_id,
        "storeName": faker.company(),
        "price": round(random.uniform(20, 200), 2),
        "stock": random.randint(1, 50)
    }

def generate_review():
    first_name = faker.first_name()
    last_name = faker.last_name()
    email = f"{first_name.lower()}.{last_name.lower()}{random.randint(1, 99)}@gmail.com"
    rating = random.randint(1, 5)
    comment = random.choice(REVIEW_COMMENTS_LOW if rating <= 2 else REVIEW_COMMENTS_HIGH)
    return {
        "firstName": first_name,
        "lastName": last_name,
        "email": email,
        "rating": rating,
        "comment": comment,
        "date": str(faker.date_this_year())
    }

def generate_product(product_id, brand_id, store_id_start):
    item_type = random.choice(list(PRODUCT_TYPE_RULES.keys()))
    rules = PRODUCT_TYPE_RULES[item_type]
    category = rules["category"]

    # Pick style tags
    style_tags = random.sample(STYLE_TAGS, 2)

    # Filter materials based on both item type and style
    style_materials = set()
    for style in style_tags:
        style_materials.update(STYLE_TO_MATERIALS.get(style, []))
    valid_materials = list(style_materials & set(rules["materials"]))
    material = random.choice(valid_materials) if valid_materials else random.choice(rules["materials"])

    # Consistent season pairings
    def pick_consistent_seasons():
        options = [
            ("spring", "summer"),
            ("autumn", "winter"),
            ("all", "all"),
        ]
        return random.choice(options)
    season = list(pick_consistent_seasons())

    # Sustainability tag logic
    def get_sustainability_tag(material):
        if "cotton" in material:
            return "organic cotton"
        elif "polyester" in material:
            return "recycled polyester"
        elif "leather" in material:
            return "vegan leather"
        else:
            return "none"

    sustainability = get_sustainability_tag(material)

    # Generate brand and product name
    brand = generate_brand(brand_id)
    style_adjective = random.choice(["Classic", "Modern", "Elegant", "Casual", "Sporty"])
    product_name = f"{style_adjective} {item_type}"
    description = f"This {material} {item_type.lower()} is a great addition to your {season[0]}/{season[1]} wardrobe — perfect for {style_tags[0]} looks."

    return {
        "productId": product_id,
        "name": product_name,
        "description": description,
        "category": category,
        "brand": brand,
        "color": faker.color_name(),
        "material": material,
        "styleTags": style_tags,
        "season": season,
        "sustainability": sustainability,
        "stockists": [generate_stockist(store_id_start + i) for i in range(random.randint(1, 3))],
        "reviews": [generate_review() for _ in range(random.randint(2, 5))]
    }

num_products = 10000
products = [generate_product(i, i, i * 10) for i in range(1, num_products + 1)]


output_path = "productsApi.json"
with open(output_path, "w") as f:
    json.dump({"products": products}, f, indent=2)

from google.colab import files
files.download(output_path)

